---
- import_playbook: common-packages.yml
- hosts: all
  become: yes
  tasks:
    - package:
        state: present
        name:
          - tomcat8
          - haproxy
    - copy:
        dest: /etc/default/haproxy
        mode: 0644
        content: |
          CONFIG="/etc/haproxy"
    - copy:
        dest: /etc/haproxy/x.cfg
        mode: 0644
        content: |
          global
              ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
              ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
              ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
              ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
          listen x
              mode http
              bind :443 ssl crt ssl-cert-localhost.certkey
              bind :80
              http-response set-header Strict-Transport-Security max-age=15768000
              option forwardfor
              http-request set-header X-Forwarded-Port %[dst_port]
              http-request set-header X-Forwarded-Proto https if { ssl_fc }
              http-request set-header X-Forwarded-Host %[req.hdr(Host)]
              redirect scheme https code 301 if !{ ssl_fc }
              server tomcat 127.0.0.1:8080
    - copy:
        dest: /usr/local/sbin/make-ssl-cert-localhost
        mode: 0755
        content: |
          #!/bin/bash
          set -eu
          name=localhost
          key=/etc/ssl/private/ssl-cert-$name.key
          cert=/etc/ssl/certs/ssl-cert-$name.pem
          certkey=/etc/ssl/private/ssl-cert-$name.certkey
          umask 077
          openssl req -x509 -newkey rsa:4096 -keyout "$key" -out "$cert" -days 365 -nodes -subj "/CN=$name"
          cat "$cert" "$key" > "$certkey"

- hosts: all
  vars:
    dhis2versionmajor: "2.31"
    dhis2versionfull: "2.31.1"
    dhis2wardisturl: "https://releases.dhis2.org/{{ dhis2versionmajor }}/{{ dhis2versionfull }}/dhis.war"
    #dhis2wardistcksum: sha256:???
  tasks:
    - get_url:
        dest: /home/dhis/tomcat-dhis/webapps/ROOT.war
        url: "{{ dhis2wardisturl }}"
        owner: dhis
        group: dhis
        #checksum:
      tags: ["skip"]

# TODO:
# - register tomcat as service
# - import Sierra Leone data
# - configure Google service account
# - ???

# Start with Ubuntu minimal (ubuntu-minimal/images/hvm-ssd/ubuntu-bionic-18.04-amd64-minimal-20190514)
# (Maybe?) Add "don't start services" /usr/sbin/policy-rc.d (exit 101)
# apt get update && apt get upgrade
# Install packages
# Add haproxy configuration file, reverse proxy to tomcat
# Add dhis2 war file
# Add sample data file
# Add dhis2 config file
# Add database role
# Add database
# Import sample data
# Add firstboot script
# - Regenerate snakeoil cert
# - Generate random database password
# - Generate random encryption password
# - Change database password
# - Update dhis2 config file
