---
- hosts: all
  become: yes
  tasks:
    - set_fact:
        dhis2versionfull: "{{ dhis2_version|default('2.32.0')}}"
    - set_fact:
        dhis2versionmajor: "{{ dhis2versionfull|regex_replace('^(\\d+\\.\\d+).*$','\\1') }}"
    - set_fact:
        dhis2wardisturl: "https://releases.dhis2.org/{{ dhis2versionmajor }}/{{ dhis2versionfull }}/dhis.war"
- import_playbook: common.yml
- hosts: all
  become: yes
  tasks:
    # The ROOT webapp directory must exist before tomcat8 gets installed
    # or else the postinst script will put default files there.
    - file:
        state: directory
        path: /var/lib/tomcat8/webapps/ROOT
    - package:
        state: present
        name:
          - ansible
          - tomcat8
          - unzip
    # The unarchive module uses unzip for war files
    - unarchive:
        remote_src: yes
        src: "{{ dhis2wardisturl }}"
        dest: /var/lib/tomcat8/webapps/ROOT
        creates: /var/lib/tomcat8/webapps/ROOT/main.vm
    - file:
        state: directory
        path: /etc/dhis
        mode: 0775
        owner: root
        group: tomcat8
    - file:
        state: directory
        path: /etc/dhis/credentials
        mode: 0700
        owner: ubuntu
    - copy:
        src: playbook-credentials.yml
        dest: /etc/dhis/playbook-credentials.yml
        mode: 0644
    - copy:
        src: templates/dhis.conf.j2
        dest: /etc/dhis/dhis.conf.j2
        mode: 0644
    - copy:
        dest: /etc/systemd/system/initialize-dhis-credentials.service
        mode: 0644
        content: |
          [Unit]
          After=postgresql.service
          Before=tomcat8.service
          ConditionPathExists=!/etc/dhis/dhis.conf

          [Service]
          Type=oneshot
          User=ubuntu
          ExecStart=/usr/bin/ansible-playbook -i "localhost ansible_connection=local," /etc/dhis/playbook-credentials.yml

          [Install]
          WantedBy=multi-user.target
    - service:
        name: initialize-dhis-credentials
        enabled: yes
    - copy:
        dest: /etc/systemd/system/make-ssl-cert-snakeoil.service
        mode: 0644
        content: |
          [Unit]
          After=network.target
          Before=postgresql.service
          ConditionPathExists=!/etc/ssl/certs/ssl-cert-snakeoil.pem

          [Service]
          Type=oneshot
          ExecStart=/usr/sbin/make-ssl-cert generate-default-snakeoil

          [Install]
          WantedBy=multi-user.target
    - service:
        name: make-ssl-cert-snakeoil
        enabled: yes
    - blockinfile:
        state: present
        path: /etc/default/tomcat8
        insertafter: EOF
        block: |

          # Location of DHIS2 configuration
          DHIS2_HOME='/etc/dhis'

# TODO:
# - register tomcat as service
# - import Sierra Leone data
# - configure Google service account
# - ???

# Start with Ubuntu minimal (ubuntu-minimal/images/hvm-ssd/ubuntu-bionic-18.04-amd64-minimal-20190514)
# (Maybe?) Add "don't start services" /usr/sbin/policy-rc.d (exit 101)
# apt get update && apt get upgrade
# Install packages
# Add haproxy configuration file, reverse proxy to tomcat
# Add dhis2 war file
# Add sample data file
# Add dhis2 config file
# Add database role
# Add database
# Import sample data
# Add firstboot script
# - Regenerate snakeoil cert
# - Generate random database password
# - Generate random encryption password
# - Change database password
# - Update dhis2 config file
