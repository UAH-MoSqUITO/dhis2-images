---
- hosts: all
  become: true
  tasks:
    - name: Prevent APT from starting services when installing packages
      copy:
        dest: /usr/sbin/policy-rc.d
        content: |
          #!/bin/sh
          exit 101
        mode: 0755
    - apt:
        update_cache: yes
        cache_valid_time: 86400
- hosts: all
  tags: ["cleanforami"]
  become: true
  tasks:
    - copy:
        dest: /usr/local/sbin/clean-for-ami
        content: |
          #!/bin/bash
          set -eu
          shopt -s nullglob
          cd /
          rm -rf \
            etc/ssh/*_key \
            etc/ssh/*_key.pub \
            etc/ssl/*/ssl-cert-snakeoil* \
            home/ubuntu/.ansible \
            home/ubuntu/.ssh/authorized_keys \
            home/ubuntu/~* \
            root/.ssh/authorized_keys \
            #
          # TODO truncate files under /var/log/
          # TODO clean cache
        mode: 0755
- hosts: all
  tags: ["packages"]
  become: true
  tasks:
    - package:
        state: present
        name:
          - openjdk-8-jdk
- hosts: all
  tags: ["https"]
  become: true
  tasks:
    - package:
        state: present
        name:
          - haproxy
    - copy:
        dest: /etc/default/haproxy
        mode: 0644
        content: |
          CONFIG="/etc/haproxy"
    - copy:
        dest: /etc/haproxy/x.cfg
        mode: 0644
        content: |
          global
              ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
              ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
              ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
              ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
          listen x
              mode http
              bind :443 ssl crt ssl-cert-localhost.certkey
              bind :80
              http-response set-header Strict-Transport-Security max-age=15768000
              option forwardfor
              http-request set-header X-Forwarded-Port %[dst_port]
              http-request set-header X-Forwarded-Proto https if { ssl_fc }
              http-request set-header X-Forwarded-Host %[req.hdr(Host)]
              redirect scheme https code 301 if !{ ssl_fc }
              server tomcat 127.0.0.1:8080
    - copy:
        dest: /usr/local/sbin/make-ssl-cert-localhost
        mode: 0755
        content: |
          #!/bin/bash
          set -eu
          name=localhost
          key=/etc/ssl/private/ssl-cert-$name.key
          cert=/etc/ssl/certs/ssl-cert-$name.pem
          certkey=/etc/ssl/private/ssl-cert-$name.certkey
          umask 077
          openssl req -x509 -newkey rsa:4096 -keyout "$key" -out "$cert" -days 365 -nodes -subj "/CN=$name"
          cat "$cert" "$key" > "$certkey"
    - copy:
        dest: /etc/systemd/system/make-ssl-cert-localhost.service
        mode: 0644
        content: |
          [Unit]
          Description=Create localhost certificate
          After=network.target
          Before=haproxy.service
          ConditionPathExists=!/etc/ssl/private/ssl-cert-localhost.certkey

          [Service]
          Type=oneshot
          ExecStart=/usr/local/sbin/make-ssl-cert-localhost

          [Install]
          WantedBy=multi-user.target
    - service:
        name: make-ssl-cert-localhost
        enabled: yes
- hosts: all
  tags: ["database"]
  become: true
  tasks:
    - set_fact:
        dhisdbname: dhis2
        dhisdbuser: dhis
    - package:
        state: present
        name:
          - postgresql-10
          - postgresql-contrib-10
          - postgresql-10-postgis-2.4
          - python-psycopg2
          - python3-psycopg2
    - copy:
        dest: /etc/postgresql/10/main/conf.d/dhis2.conf
        mode: 0644
        content: |
          # Avoid "out of shared memory" error for DHIS2
          max_locks_per_transaction = 1024
    - service:
        name: postgresql
        state: started
    - wait_for:
        state: started
        port: 5432
    - block:
        - postgresql_user:
            state: present
            name: "{{ dhisdbuser }}"
            role_attr_flags: NOCREATEDB,NOCREATEROLE,LOGIN,NOSUPERUSER
        - postgresql_db:
            state: present
            name: "{{ dhisdbname }}"
            owner: "{{ dhisdbuser }}"
        - postgresql_ext:
            state: present
            db: "{{ dhisdbname }}"
            name: postgis
      become_user: postgres
